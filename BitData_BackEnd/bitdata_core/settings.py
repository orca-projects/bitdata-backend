"""
Django settings for bitdata_core project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from pathlib import Path
from dotenv import load_dotenv
from decouple import config

# 카카오 REST API 키
KAKAO_REST_API_KEY = config('KAKAO_REST_API_KEY')

# 카카오 클라이언트 시크릿 (활성화된 경우만 사용)
KAKAO_CLIENT_SECRET = config('KAKAO_CLIENT_SECRET')

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-uu1)e33322xpk&z5im&24fv(je6hd=qp)@om$^d@j0=@jdad(5'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1', 'localhost', '43.200.133.6']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'auths.apps.AuthsConfig', # 로그인 관련
    'dashboard.apps.DashboardConfig', # 대시보드 관련
    'transaction.apps.TransactionConfig', # 거래내역 관련
    'settings.apps.SettingsConfig', # 설정 관련
    'rest_framework', # rest_framework
    'corsheaders', # CORS
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware', # CORS
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'bitdata_core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'bitdata_core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

# 현재 파일 위치를 기준으로 .env 파일 경로 설정
load_dotenv()

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',  # PostgreSQL 사용 시
        'NAME': os.getenv('DB_NAME'),
        'USER': os.getenv('DB_USER'),
        'PASSWORD': os.getenv('DB_PASSWORD'),
        'HOST': os.getenv('DB_HOST'), # 배포 용
        # 'HOST': os.getenv('localhost'), # 로컬 테스트 용
        'PORT': os.getenv('DB_PORT'),
    }
}


# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'social_db',           # 생성한 데이터베이스 이름
#         'USER': 'postgres',             # 생성한 유저 이름
#         'PASSWORD': '0000',             # 유저 비밀번호
#         'HOST': 'localhost',            # 호스트 (로컬 서버의 경우 'localhost')
#         'PORT': '5432',                 # 포트 (기본값: 5432)
#     }
# }

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CORS_ALLOWED_ORIGINS = [
    'http://localhost:5173', 
    'http://127.0.0.1:5173', 
    'http://43.200.133.6:8000',
    'http://localhost:8000', 
    'http://127.0.0.1:8000',               
    ]

CORS_ALLOW_CREDENTIALS = True  # Include credentials
CORS_ALLOW_ALL_ORIGINS = True

AUTH_USER_MODEL='auths.User'

SESSION_ENGINE = 'django.contrib.sessions.backends.db'  # 기본 설정
SESSION_SAVE_EVERY_REQUEST = True
SESSION_COOKIE_SECURE = False  # 개발 환경에서 False로 설정
SESSION_COOKIE_SAMESITE = 'None'
SESSION_COOKIE_NAME = 'sessionid'  # 쿠키에 저장될 세션 이름